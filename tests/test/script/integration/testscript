# file      : tests/test/script/integration/testscript
# copyright : Copyright (c) 2014-2016 Code Synthesis Ltd
# license   : MIT; see accompanying LICENSE file

test.options += -q --buildfile -
test.arguments = test

+mkdir build
#+cat <<EOI >>>build/boostrap.build
#project = test
#amalgamation =
#
#using test
#EOI
+cp $src_base/bootstrap.build build/

{
  +touch testscript foo.test bar.test

  $* <<EOI 2>>EOE != 0
./: test{../testscript ../foo}
EOI
error: both 'testscript' and other names specified for dir{./}
EOE

  $* <<EOI 2>>EOE != 0
./: test{../foo ../testscript}
EOI
error: both 'testscript' and other names specified for dir{./}
EOE

  $* <<EOI
./: test{../foo ../bar}
EOI

  -rm -f testscript foo.test bar.test
}

# work-dir-file
#
touch foo.test &foo.test; #@@ TMP
touch test &test; #@@ TMP
$* <<EOI 2>>EOE != 0
./: test{foo}
EOI
error: working directory test/ is a file/symlink
EOE

# work-dir-exists
#
touch foo.test &foo.test; #@@ TMP
mkdir test; #@@ Need a way to ignore/deregister cleanup.
$* <<EOI 2>>EOE
./: test{foo}
EOI
warning: working directory test/ exists at the beginning of the test
EOE

# work-dir-not-empty
#
touch foo.test &foo.test; #@@ TMP
mkdir test;               #@@ Need a way to ignore/deregister cleanup.
touch test/dummy;         #@@ Need a way to ignore/deregister cleanup.
$* <<EOI 2>>EOE
./: test{foo}
EOI
warning: working directory test/ exists and is not empty at the beginning \
of the test
EOE

# work-dir-not-empty-end
#
# @@ No (easy) way to test this. Maybe if the inner test creates something
#    without cleanup?

-rm -f build/bootstrap.build
-rmdir build/
