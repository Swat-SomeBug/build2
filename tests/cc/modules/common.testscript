# file      : tests/cc/modules/common.testscript
# license   : MIT; see accompanying LICENSE file

crosstest = false
test.arguments = config.cxx=$quote($recall($cxx.path) $cxx.config.mode)

.include ../../common.testscript

+cat <<EOI >+build/bootstrap.build
using test
EOI

+cat <<EOI >=build/root.build
using in

using cxx.guess

# Force modules.
#
cxx.std = experimental
cxx.features.symexport = true

# @@ TMP revise
if ($cxx.id == 'gcc')
  cxx.features.modules = true

using cxx

hxx{*}: extension = hxx
mxx{*}: extension = mxx
cxx{*}: extension = cxx

cxx.poptions =+ "-I$out_root" "-I$src_root"

if ($cxx.target.class == 'windows')
  bmis{*}: cxx.poptions += '-DLIBFOO_EXPORT=__declspec(dllexport)'

exe{*}: test = true
EOI

# Determine if we have modules and header units support.
#
+$* noop <<EOI | set modules
print $cxx.features.modules
EOI

+$* noop <<EOI | set headers
print ($cxx.features.modules && $cxx.id == 'gcc')
EOI

# @@ TMP: modules support is broken in MinGW GCC (symexport).
#
#\
if ($cxx.target.class == 'windows' && $cxx.id == 'gcc')
  modules = false
  headers = false
end
#\
