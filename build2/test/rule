// file      : build2/test/rule -*- C++ -*-
// copyright : Copyright (c) 2014-2017 Code Synthesis Ltd
// license   : MIT; see accompanying LICENSE file

#ifndef BUILD2_TEST_RULE
#define BUILD2_TEST_RULE

#include <build2/types>
#include <build2/utility>

#include <build2/rule>
#include <build2/operation>

#include <build2/test/common>

namespace build2
{
  namespace test
  {
    class rule_common: public build2::rule, protected virtual common
    {
    public:
      virtual match_result
      match (slock&, action, target&, const string&) const override;

      target_state
      perform_script (action, target&) const;
    };

    class rule: public rule_common
    {
    public:
      virtual recipe
      apply (slock&, action, target&) const override;

      static target_state
      perform_test (action, target&);
    };

    class alias_rule: public rule_common
    {
    public:
      virtual recipe
      apply (slock&, action, target&) const override;

      target_state
      perform_test (action, target&) const;
    };
  }
}

#endif // BUILD2_TEST_RULE
