// file      : build/rule -*- C++ -*-
// copyright : Copyright (c) 2014-2015 Code Synthesis Tools CC
// license   : MIT; see accompanying LICENSE file

#ifndef BUILD_RULE
#define BUILD_RULE

#include <string>
#include <typeindex>
#include <functional>     // reference_wrapper
#include <unordered_map>

#include <build/target>
#include <build/prefix_map>

namespace build
{
  class rule
  {
  public:
    virtual recipe
    match (target&, bool single, std::string& hint) const = 0;
  };

  typedef std::unordered_map<
    std::type_index,
    prefix_multimap<std::string, std::reference_wrapper<rule>, '.'>> rule_map;

  extern rule_map rules;

  class default_path_rule: public rule
  {
  public:
    virtual recipe
    match (target&, bool single, std::string& hint) const;

    static target_state
    update (target&);
  };
}

#endif // BUILD_RULE
