// file      : build/token -*- C++ -*-
// copyright : Copyright (c) 2014-2015 Code Synthesis Ltd
// license   : MIT; see accompanying LICENSE file

#ifndef BUILD_TOKEN
#define BUILD_TOKEN

#include <string>
#include <iosfwd>
#include <cstddef> // size_t
#include <cstdint> // uint64_t
#include <utility> // move

namespace build
{
  enum class token_type
  {
    eos,
    name,
    newline,
    pair_separator,
    colon,
    lcbrace,
    rcbrace,
    equal,
    plus_equal,
    dollar,
    lparen,
    rparen
  };

  class token
  {
  public:
    token_type type;
    bool separated; // Whitespace-separated from the previous token.
    bool quoted;    // Name (or some part of it) was quoted.

    std::string value; // Only valid for name.

    std::uint64_t line;
    std::uint64_t column;

  public:
    token (token_type t, bool s, std::uint64_t l, std::uint64_t c)
        : type (t), separated (s), line (l), column (c) {}

    token (std::string n, bool s, bool q, std::uint64_t l, std::uint64_t c)
        : type (token_type::name),
          separated (s),
          quoted (q),
          value (std::move (n)),
          line (l),
          column (c) {}
  };

  // Output the token value in a format suitable for diagnostics.
  //
  std::ostream&
  operator<< (std::ostream&, const token&);
}

#endif // BUILD_TOKEN
