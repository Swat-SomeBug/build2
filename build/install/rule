// file      : build/install/rule -*- C++ -*-
// copyright : Copyright (c) 2014-2015 Code Synthesis Ltd
// license   : MIT; see accompanying LICENSE file

#ifndef BUILD_INSTALL_RULE
#define BUILD_INSTALL_RULE

#include <build/rule>
#include <build/types>
#include <build/target>
#include <build/operation>

namespace build
{
  namespace install
  {
    class alias_rule: public rule
    {
    public:
      virtual match_result
      match (action, target&, const std::string&) const;

      virtual recipe
      apply (action, target&, const match_result&) const;
    };

    class file_rule: public rule
    {
    public:
      virtual match_result
      match (action, target&, const std::string&) const;

      // Return NULL if this prerequisite should be ignored and pointer to its
      // target otherwise. The default implementation ignores prerequsites that
      // are outside of this target's project.
      //
      virtual target*
      filter (action, target&, prerequisite_member) const;

      virtual recipe
      apply (action, target&, const match_result&) const;

      static target_state
      perform_install (action, target&);
    };
  }
}

#endif // BUILD_INSTALL_RULE
